name: 'CI'

on: [push, pull_request]
  # push:
  #   paths:
  #     - '**.(ts|js|json)'
  # pull_request:
  #   paths:
  #     - '**.(ts|js|json)'

jobs:
  testing:
    name: Test
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Preparing the environment
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: yarn
      - name: Install the dependencies
        run: yarn install
      - name: Build
        run: yarn build

      # Test IORedis
      - name: Test > IO Redis Transport
        run: yarn test
        env:
          TEST_TRANSPORT: ioredis

      # Test InMemory
      - name: Final Test > InMemory Transport
        run: yarn test:ci


  publish:
    name: Publish Packages
    runs-on: ubuntu-latest
    needs: testing
    if: ${{ success() && github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build in production mode
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: yarn install
      - run: yarn build:prod

      - name: NPM publish
        id: npm-publish
        uses: pascalgn/npm-publish-action@1.3.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - run: |
          echo "IS_CHANGED=${{ steps.npm-publish.outputs.changed }}" >> $GITHUB_ENV


      - name: GPM publish
        if: ${{ IS_CHANGED }}
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: 'https://npm.pkg.github.com'
          scope: '@hisorange'
      - run: yarn publish --non-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release GH
    runs-on: ubuntu-latest
    needs: publish
    if: ${{ IS_CHANGED }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Expose git commit data
      uses: rlespinasse/git-commit-data-action@v1.x

    - run: |
        echo "RELEASE_NAME=$(echo $GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED | sed -r 's/Release //')" >> $GITHUB_ENV

    - run: |
        echo "RELEASE_TAG=$(echo $GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED | sed -r 's/Release /v/')" >> $GITHUB_ENV

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.RELEASE_NAME }}
        tag_name: ${{ env.RELEASE_TAG }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: release
    if: ${{ IS_CHANGED }}

    steps:
      - name: Notify the authors
        uses: Ilshidur/action-slack@2.1.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GitHub Release Notification
          SLACK_AVATAR: sender
        with:
          args: '[${{ github.repository }}] Published the release [${{ env.RELEASE_NAME }}]'



